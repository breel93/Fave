apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
  compileSdkVersion versions.compileSdk
  defaultConfig {
    minSdkVersion versions.minSdk
    targetSdkVersion versions.compileSdk
    buildConfigField("String", "NEWS_API_KEY", NEWS_API_KEY)
    buildConfigField("String", "BASE_URL", BASE_URL)
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8.toString()
  }
  tasks.withType(org.jetbrains.kotlin.gradle.tasks.AbstractKotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
        "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
        "-Xopt-in=kotlinx.coroutines.FlowPreview",
        "-XXLanguage:+InlineClasses"
    ]
  }
}


dependencies {
  implementation project(':shared:data')
  implementation project(':shared:core')
  implementation deps.kotlin
  implementation deps.hiltCore
  kapt deps.hiltCompiler
  implementation deps.retrofit
  implementation deps.moshi
  implementation deps.kotlinMoshi
  implementation deps.kotlinMoshiGen
  implementation deps.loggingInterceptor
  implementation deps.okhttp
  implementation deps.coroutines
  //test
  testImplementation testDeps.junit
  testImplementation testDeps.mockwebserver
  testImplementation testDeps.googleTruth
  testImplementation testDeps.coroutines_test
  testImplementation testDeps.mockitoVersion
  testImplementation testDeps.mockitoKotlin
}